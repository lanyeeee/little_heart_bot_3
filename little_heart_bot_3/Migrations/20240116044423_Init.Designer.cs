// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using little_heart_bot_3.Data;

#nullable disable

namespace little_heart_bot_3.Migrations
{
    [DbContext(typeof(LittleHeartDbContext))]
    [Migration("20240116044423_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("little_heart_bot_3.Data.Models.MessageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0)
                        .HasColumnName("code");

                    b.Property<bool>("Completed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("completed")
                        .HasComment("弹幕是否已发送");

                    b.Property<string>("Content")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("content")
                        .HasComment("弹幕的内容");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<string>("Response")
                        .HasColumnType("json")
                        .HasColumnName("response");

                    b.Property<long>("RoomId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("room_id");

                    b.Property<string>("TargetName")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("target_name");

                    b.Property<long>("TargetUid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("target_uid");

                    b.Property<long>("Uid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("uid")
                        .HasComment("用户的uid");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.HasKey("Id");

                    b.HasIndex("Uid", "TargetUid")
                        .IsUnique();

                    b.ToTable("message_table", (string)null);
                });

            modelBuilder.Entity("little_heart_bot_3.Data.Models.TargetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("Completed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("completed")
                        .HasComment("今日任务是否已完成");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<int>("Exp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0)
                        .HasColumnName("exp")
                        .HasComment("今日已获得的经验");

                    b.Property<long>("RoomId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("room_id")
                        .HasComment("直播间的room_id");

                    b.Property<string>("TargetName")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("target_name")
                        .HasComment("直播间主播的名字");

                    b.Property<long>("TargetUid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("target_uid")
                        .HasComment("直播间主播的uid");

                    b.Property<long>("Uid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("uid")
                        .HasComment("用户的uid");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<int>("WatchedSeconds")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0)
                        .HasColumnName("watched_seconds")
                        .HasComment("今日已观看直播的时长");

                    b.HasKey("Id");

                    b.HasIndex("Uid", "TargetUid")
                        .IsUnique();

                    b.ToTable("target_table", (string)null);
                });

            modelBuilder.Entity("little_heart_bot_3.Data.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("Completed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("completed")
                        .HasComment("今日的任务是否已完成");

                    b.Property<int>("ConfigNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0)
                        .HasColumnName("config_num")
                        .HasComment("今日查了多少次配置");

                    b.Property<long>("ConfigTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0L)
                        .HasColumnName("config_timestamp")
                        .HasComment("上一次查询配置的时间戳");

                    b.Property<string>("Cookie")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(2000)")
                        .HasDefaultValue("")
                        .HasColumnName("cookie");

                    b.Property<int>("CookieStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0)
                        .HasColumnName("cookie_status")
                        .HasComment("0 未验证, 1 正常, -1 异常");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<string>("Csrf")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(32)")
                        .HasDefaultValue("")
                        .HasColumnName("csrf");

                    b.Property<long>("ReadTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0L)
                        .HasColumnName("read_timestamp")
                        .HasComment("上一条已读私信的时间戳，用于找出未读私信");

                    b.Property<long>("Uid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("uid");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.HasKey("Id");

                    b.ToTable("user_table", (string)null);
                });

            modelBuilder.Entity("little_heart_bot_3.Data.Models.MessageModel", b =>
                {
                    b.HasOne("little_heart_bot_3.Data.Models.UserModel", "UserModel")
                        .WithMany("Messages")
                        .HasForeignKey("Uid")
                        .HasPrincipalKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("little_heart_bot_3.Data.Models.TargetModel", b =>
                {
                    b.HasOne("little_heart_bot_3.Data.Models.UserModel", "UserModel")
                        .WithMany("Targets")
                        .HasForeignKey("Uid")
                        .HasPrincipalKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("little_heart_bot_3.Data.Models.UserModel", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Targets");
                });
#pragma warning restore 612, 618
        }
    }
}
